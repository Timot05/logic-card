import CPG151101S03 from "CPG151101S03.ato"
import RP2040Kit from "rp2040/RP2040Kit.ato"
import LDOReg3V3 from "ldo_reg.ato"
import Resistor from "generics/resistor.ato"
import Power from "generics/interfaces.ato"
# battery holder
import BH_AAA_A1AJ024 from "BH-AAA-A1AJ024.ato"
# switch
import B3F_4005_C397283 from "B3F-4005_C397283.ato"
# mosfet
import _2N7002KW_R1_00001 from "2N7002KW_R1_00001.ato"

import ButtonTS1187A from "button.ato"
# Diode
import _1N4148W_T4 from "1N4148WT4.ato"

module SwitchPullUp:
    power = new Power
    signal out
    switch = new B3F_4005_C397283
    r_pd = new Resistor
    r_pd.value = "10k"
    r_pd.footprint = "Resistor_SMD:R_0603_1608Metric"

    power.vcc ~ r_pd.p1; r_pd.p2 ~ out
    out ~ switch.in; switch.out ~ power.gnd

component RGBLed:
    # https://www.adafruit.com/product/848
    signal r ~ pin 1
    signal g ~ pin 2
    signal vcc ~ pin 3
    signal b ~ pin 4

    # Pitch is 1.25. Hoping this 1.27 will work
    footprint = "Connector_PinHeader_1.27mm:PinHeader_1x04_P1.27mm_Vertical"

module RGBLedKit:
    signal r_sink
    signal g_sink
    signal vcc
    signal b_sink

    rr = new Resistor
    rg = new Resistor
    rb = new Resistor

    led = new RGBLed

    led.vcc ~ vcc
    led.r ~ rr.p1; rr.p2 ~ r_sink
    led.g ~ rg.p1; rg.p2 ~ g_sink
    led.b ~ rb.p1; rb.p2 ~ b_sink

    rg.value = "100"
    rb.value = "100"
    rr.value = "1.5K"

    rg.footprint = "Resistor_SMD:R_0603_1608Metric"
    rb.footprint = "Resistor_SMD:R_0603_1608Metric"
    rr.footprint = "Resistor_SMD:R_0603_1608Metric"

component PinHeader8:
    # KH_127PH180_1X8P_L72
    footprint = "HDR-TH_8P-P1.27-V-M"
    mpn = "C2938403"

    pin 1 ~ signal in
    pin 2 ~ signal wire
    pin 3 ~ signal not
    pin 4 ~ signal or
    pin 5 ~ signal and
    pin 6 ~ signal xor
    pin 7 ~ signal latch
    pin 8 ~ signal out

module _ButtonPullup:
    btn = new ButtonTS1187A

    signal output
    power = new Power

    pullup = new Resistor
    pullup.value = "10k"
    pullup.footprint = "Resistor_SMD:R_0402_1005Metric"

    power.vcc ~ pullup.p1; pullup.p2 ~ btn.p1; btn.p2 ~ power.gnd
    output ~ pullup.p2


module LogicCard:
    # Power stuff
    ldo = new LDOReg3V3
    aaa = new BH_AAA_A1AJ024

    aaa.minus ~ ldo.power_in.gnd

    # The selector will close the circuit and turn on the device
    selector = new PinHeader8
    aaa_diode = new _1N4148W_T4
    aaa.plus ~ selector.in; selector.out ~ aaa_diode.A; aaa_diode.K ~ ldo.power_in.vcc

    # A micro
    micro = new RP2040Kit
    usb_diode = new _1N4148W_T4
    micro.usb_conn.power.vcc ~ usb_diode.A; usb_diode.K ~ ldo.power_in.vcc
    micro.usb_conn.power.gnd ~ ldo.power_in.gnd
    # Huge hack until we fix the replacement operator
    reset_btn = new _ButtonPullup
    boot_btn = new _ButtonPullup
    ldo.power_out ~ reset_btn.power
    ldo.power_out ~ boot_btn.power
    reset_btn.output ~ micro.micro.run
    boot_btn.output ~ micro.micro.qspi_ss_n

    ldo.power_out ~ micro.power

    # Two switches for the gate
    switch_1 = new SwitchPullUp
    switch_2 = new SwitchPullUp

    switch_1.out ~ micro.micro.gpio0
    switch_2.out ~ micro.micro.gpio14

    switch_1.power ~ ldo.power_out
    switch_2.power ~ ldo.power_out

    # Connecting the micro to the plates
    micro.micro.gpio1 ~ selector.wire
    micro.micro.gpio2 ~ selector.not
    micro.micro.gpio3 ~ selector.or
    micro.micro.gpio4 ~ selector.and
    micro.micro.gpio5 ~ selector.xor
    micro.micro.gpio6 ~ selector.latch

    rwire = new Resistor
    rwire.footprint = "Resistor_SMD:R_0402_1005Metric"
    rwire.value = "10k"
    selector.wire ~ rwire.p2; rwire.p1 ~ ldo.power_out.vcc
    rnot = new Resistor
    rnot.footprint = "Resistor_SMD:R_0402_1005Metric"
    rnot.value = "10k"
    selector.not ~ rnot.p2; rnot.p1 ~ ldo.power_out.vcc
    ror = new Resistor
    ror.footprint = "Resistor_SMD:R_0402_1005Metric"
    ror.value = "10k"
    selector.or ~ ror.p2; ror.p1 ~ ldo.power_out.vcc
    rand = new Resistor
    rand.footprint = "Resistor_SMD:R_0402_1005Metric"
    rand.value = "10k"
    selector.and ~ rand.p2; rand.p1 ~ ldo.power_out.vcc
    rxor = new Resistor
    rxor.footprint = "Resistor_SMD:R_0402_1005Metric"
    rxor.value = "10k"
    selector.xor ~ rxor.p2; rxor.p1 ~ ldo.power_out.vcc
    rlatch = new Resistor
    rlatch.footprint = "Resistor_SMD:R_0402_1005Metric"
    rlatch.value = "10k"
    selector.latch ~ rlatch.p2; rlatch.p1 ~ ldo.power_out.vcc

    # Mechanical support on the other side
    opposite_support = new PinHeader8

    # Lastly, an LED
    led_kit = new RGBLedKit
    r_mosfet = new _2N7002KW_R1_00001
    g_mosfet = new _2N7002KW_R1_00001
    b_mosfet = new _2N7002KW_R1_00001

    led_kit.r_sink ~ r_mosfet.drain
    led_kit.g_sink ~ g_mosfet.drain
    led_kit.b_sink ~ b_mosfet.drain

    led_kit.vcc ~ ldo.power_out.vcc

    micro.micro.gpio22 ~ r_mosfet.gate
    micro.micro.gpio23 ~ g_mosfet.gate
    micro.micro.gpio24 ~ b_mosfet.gate

    r_mosfet.source ~ ldo.power_out.gnd
    g_mosfet.source ~ ldo.power_out.gnd
    b_mosfet.source ~ ldo.power_out.gnd