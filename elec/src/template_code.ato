# this is template code for an ato project
# for more complex examples, head over to:
# https://gitlab.atopile.io/atopile/servo-drive

# we can start off by importing some standard components
import Resistor from "std/resistor.ato"
import Capacitor from "std/capacitor.ato"
import Inductor from "std/inductor.ato"

# we can then import project specific components or modules
# a module is a collection of components that are used together
# you can also create components from jlc using the easyeday2ato command
# for more information, see the ato documentation here: http://docs.atopile.io/#adding-footprints-to-your-project

# if you cannot find a component you need, you can always define it yourself!
component Timer555Dip8:
    signal gnd ~ pin p1
    signal trigger ~ pin p2
    signal output ~ pin p3
    signal reset ~ pin p4
    signal ctrl_v ~ pin p5
    signal threshold ~ pin p6
    signal discharge ~ pin p7
    signal vcc ~ pin p8

    footprint = "lib:DIP-8_L9.7-W6.4-P2.54-LS7.6-BL"

# this is your top level module, as defined in the ato.yaml file
module HelloWorld:
    signal vcc_5v
    signal gnd

    # this is a component instantiation
    timer = new Timer555Dip8

    timer.vcc ~ vcc_5v
    timer.gnd ~ gnd

    # this is a capacitor instantiation
    bypass_cap = new Capacitor
    # we can set the value of the capacitor
    bypass_cap.value = "100nF"
    # we can also set the footprint of the capacitor
    bypass_cap.footprint = "Capacitor_SMD:C_0402_1005Metric"

    # we can connect the capacitor to the vcc and gnd signals
    bypass_cap.p1 ~ vcc_5v
    bypass_cap.p2 ~ gnd

# thats it! run ato build from the src directory to generate the kicad netlist
# help: http://docs.atopile.io/#building-the-netlist
# if you have added new components, you may need to run ato resolve then fill in the jlcpcb part numbers in default-bom-jlcpcb.yaml
# to get netlist into kicad, follow these steps: http://docs.atopile.io/#importing-to-kicad
